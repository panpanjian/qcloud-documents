## 重要概念

1. **KDC**

全称：key distributed center

作用：整个安全认证过程的票据生成管理服务，其中包含两个服务，AS和TGS

2. **AS**

全称：authentication service

作用：为client生成TGT的服务

3. **TGS**

全称：ticket granting service

作用：为client生成某个服务的ticket 

4. **AD**

全称：account database

作用：存储所有client的白名单，只有存在于白名单的client才能顺利申请到TGT

5. **TGT**

全称：ticket-granting ticket

作用：用于获取ticket的票据

6. **client**

想访问某个server的客户端

7. **server**

提供某种业务的服务

## 其他概念

1. **principal**
   认证的主体，简单来说就是"用户名"
2. **realm**
   realm有点像编程语言中的namespace。在编程语言中，变量名只有在某个"namespace"里才有意义。同样的，一个principal只有在某个realm下才有意义。
   所以realm可以看成是principal的一个"容器"或者"空间"。相对应的，principal的命名规则是"what_name_you_like@realm"。
   在kerberos, 大家都约定成俗用大写来命名realm，比如"EXAMPLE.COM"
3. **password**
   某个用户的密码，对应于kerberos中的master_key。password可以存在一个keytab文件中。所以kerberos中需要使用密码的场景都可以用一个keytab作为输入。
4. **credential**
   credential是”证明某个人确定是他自己/某一种行为的确可以发生“的凭据。在不同的使用场景下，credential的具体含义也略有不同：

- 对于某个principal个体而言，他的credential就是他的password。
- 在kerberos认证的环节中，credential就意味着各种各样的ticket。

## 认证流程

![](https://main.qcloudimg.com/raw/f9ee684d2aeb1c2ece1fd36507ee9c0c.png)

client访问server的过程中，想确保client和server都是可靠的，必然要引入第三方公证平台，因此有了AS和TGS这个两个服务，AS与TGS通常位于同一个服务进程中，对于mit的kerberos实现，均由kdc提供。

认证流程分为以下三步：

1. client向kerberos服务请求，希望获取访问server的权限。kerberos首先判断client是否可信赖，通过在AD中存储黑名单和白名单来区分client。成功后，AS返回TGT给client。
2. client得到了TGT后，继续向kerberos请求，希望获取访问server的权限。kerberos通过client消息中的TGT，判断client拥有权限，给client访问server的权限ticket。
3. client得到ticket后，就可以访问server了，但这个ticket只是针对这个server，访问其他server需要重新向TGS申请。
